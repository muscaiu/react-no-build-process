{"version":3,"sources":["directory.js"],"names":["SizeSelector","props","sizeOptions","sizes","map","num","i","handleChangeSize","e","onChangeSize","target","value","defaultSize","ColorSelector","colorOptions","colors","name","handleChangeColor","onChangeColor","defaultColor","RefeshButton","handleRefresh","onRefresh","ProductImage","color","PruductCustomizer","createReactClass","getInitialState","size","window","Inventory","allSizes","allColors","selectedColor","avaiableSizes","byColor","setState","indexOf","state","console","log","selectedSize","availableColors","bySize","render","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["(() => {\n    \"use strict\";\n\n    const SizeSelector = (props) => {\n        const sizeOptions = () => props.sizes.map((num, i) =>\n            <option value={num} key={i}>{num}</option>)\n        const handleChangeSize = (e) => props.onChangeSize(e.target.value)\n\n        return (\n            <div className=\"field-group\">\n                <label htmlFor=\"size-options\">Size:</label>\n                <select\n                    defaultValue={props.defaultSize}\n                    name=\"sizeOptions\"\n                    id=\"size-options\"\n                    onChange={handleChangeSize}\n                >\n                    {sizeOptions()}\n                </select>\n            </div>\n        )\n    }\n\n    const ColorSelector = (props) => {\n        const colorOptions = () => props.colors.map((name, i) =>\n            <option value={name} key={i}>{name}</option>)\n        const handleChangeColor = (e) => props.onChangeColor(e.target.value)\n\n        return (\n            <div className=\"field-group\">\n                <label htmlFor=\"color-options\">Color:</label>\n                <select\n                    name=\"colorOptions\"\n                    id=\"color-options\"\n                    onChange={handleChangeColor}\n                    defaultValue={props.defaultColor}\n                >\n                    {colorOptions()}\n                </select>\n            </div>\n        )\n    }\n\n    const RefeshButton = (props) => {\n        const handleRefresh = () => props.onRefresh()\n\n        return (\n            <button onClick={handleRefresh}>refresh</button>\n        )\n    }\n\n    const ProductImage = (props) => <img src={`./assets/${props.color}.jpg`} alt=\"product image\" />\n\n    const PruductCustomizer = createReactClass({\n        getInitialState: function () {\n            return {\n                color: \"red\",\n                defaultColor: \"red\",\n                size: 7,\n                defaultSize: 7,\n                sizes: window.Inventory.allSizes,\n                colors: window.Inventory.allColors\n            }\n        },\n        onChangeColor: function (selectedColor) {\n            const avaiableSizes = window.Inventory.byColor[selectedColor]\n            this.setState({\n                sizes: avaiableSizes,\n                color: selectedColor\n            })\n\n            if (avaiableSizes.indexOf(this.state.size) === -1) {\n                console.log(\n                    'size', this.state.size, 'not available in color', selectedColor,\n                    'but it is available in size', avaiableSizes[0]\n                );\n                this.setState({ size: avaiableSizes[0] });\n            }\n        },\n        onChangeSize: function (selectedSize) {\n            const availableColors = window.Inventory.bySize[selectedSize];\n            this.setState({\n                colors: availableColors\n            });\n\n            if (availableColors.indexOf(this.state.color) === -1) {\n                console.log(\n                    'color', this.state.color, 'not available in size', selectedSize,\n                    'but it is available in color', availableColors[0]\n                );\n                this.setState({ color: availableColors[0] });\n            }\n        },\n        onRefresh: function () {\n            this.setState({\n                color: \"red\",\n                defaultColor: \"red\",\n                size: 7,\n                defaultSize: 7,\n                sizes: window.Inventory.allSizes,\n                colors: window.Inventory.allColors\n            })\n        },\n        render: function () {\n            return (\n                <div className=\"customizer\">\n                    <div className=\"product-image\" >\n                        < ProductImage color={this.state.color} />\n                        <div className=\"selectors\" >\n                            < SizeSelector\n                                size={this.state.size}\n                                defaultSize={this.state.defaultSize}\n                                sizes={this.state.sizes}\n                                onChangeSize={this.onChangeSize}\n                            />\n                            < ColorSelector\n                                color={this.state.color}\n                                defaultColor={this.state.defaultColor}\n                                colors={this.state.colors}\n                                onChangeColor={this.onChangeColor}\n                            />\n                            <RefeshButton\n                                onRefresh={this.onRefresh}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    })\n\n    ReactDOM.render(\n        <PruductCustomizer />,\n        document.getElementById('react-root')\n    );\n})();\n"]}